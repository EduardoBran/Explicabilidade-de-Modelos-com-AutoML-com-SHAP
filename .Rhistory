idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
# Excluindo a variável usuario_id
dados <- dados %>%
select(-usuario_id)
# Escalonamento de Variáveis Numéricas
dados <- dados %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id na posição 1
dados <- cbind(dados$usuario_id, dados)
str(dados2)
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
# Excluindo a variável usuario_id
dados <- dados %>%
select(-usuario_id)
# Escalonamento de Variáveis Numéricas
dados <- dados %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id na posição 1
dados <- cbind(dados$usuario_id, dados)
View(dados)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
# Excluindo a variável usuario_id
dados <- dados %>%
select(-usuario_id)
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id na posição 1
dados_scaled <- cbind(usuario_id = dados$usuario_id, dados_scaled)
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
# Excluindo a variável usuario_id
dados_scaled <- dados %>%
select(-usuario_id)
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados_scaled %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id na posição 1
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
View(dados)
summary(dados)
head(dados)
names(dados)
View(dados)
str(dados)
head(dados)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
# Excluindo a variável usuario_id
dados_scaled <- dados %>%
select(-usuario_id)
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados_scaled %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id na posição 1
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
str(dados)
summary(dados)
head(dados)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
## Análise Exploratória + Eng de Atributos
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados %>%
select(-usuario_id)
dados_scaled <- dados_scaled %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
str(dados)
summary(dados)
head(dados)
# Criação de Novas Características (Variáveis)
dados <- dados %>%
mutate(
razao_produtos_tempo = produtos_visualizados / tempo_na_plataforma,
interacao_idade_produtos = idade * produtos_visualizados
)
head(dados)
summary(dados)
View(dados)
names(dados)
str(dados)
summary(dados)
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
## Análise Exploratória + Eng de Atributos
# Criação de Novas Características (Variáveis)
dados <- dados %>%
mutate(
razao_produtos_tempo = produtos_visualizados / tempo_na_plataforma,
interacao_idade_produtos = idade * produtos_visualizados
)
head(dados)
str(dados)
summary(dados)
View(dados)
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados %>%
select(-usuario_id)
dados_scaled <- dados_scaled %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
str(dados)
summary(dados)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
## Análise Exploratória + Eng de Atributos
# Feature Engineering Específico para o Problema (Indicador de relevância entre produto_recomendado e produto_visualizado)
dados <- dados %>%
mutate(relevancia_produto = as.numeric(produto_recomendado == categoria_preferida))
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
taxa_conversao = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
# Criação de Novas Características (Variáveis)
dados <- dados %>%
mutate(
razao_produtos_tempo = produtos_visualizados / tempo_na_plataforma,
interacao_idade_produtos = idade * produtos_visualizados
)
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados %>%
select(-usuario_id) %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
str(dados)
summary(dados)
head(dados)
rm(dados_scaled)
View(dados)
# Salvando dataset
write.csv(dados, file = "dados_exemplo3", row.names = FALSE)
# Salvando dataset
write.csv(dados, file = "dados_exemplo3.csv", row.names = FALSE)
# Carregando dataset
dados_carregados <- read.csv("dados_exemplo3.csv")
View(dados_carregados)
# Carregando dataset
dados <- read.csv("dados_exemplo3.csv")
## Inicialização do h2o
h2o.init()
# O H2O requer que os dados estejam no formato de dataframe do H2O
h2o_frame <- as.h2o(dados)
# Split dos dados em treino e teste (cria duas listas)
h2o_frame_split <- h2o.splitFrame(h2o_frame, ratios = 0.85)
head(h2o_frame_split)
# Split dos dados em treino e teste (cria duas listas)
h2o_frame_split <- h2o.splitFrame(h2o_frame, ratios = 0.85)
head(h2o_frame_split)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
realizou_compra = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.4), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
# Criação de Novas Características (Variáveis)
dados <- dados %>%
mutate(
razao_produtos_tempo = produtos_visualizados / tempo_na_plataforma,
interacao_idade_produtos = idade * produtos_visualizados
)
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados %>%
select(-usuario_id) %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
str(dados)
summary(dados)
head(dados)
rm(dados_scaled)
# Salvando dataset
write.csv(dados, file = "dados_exemplo3.csv", row.names = FALSE)
# Carregando dataset
dados <- read.csv("dados_exemplo3.csv")
# O H2O requer que os dados estejam no formato de dataframe do H2O
h2o_frame <- as.h2o(dados)
## Divisão dos Dados em Treino e Teste
# Split dos dados em treino e teste (cria duas listas)
h2o_frame_split <- h2o.splitFrame(h2o_frame, ratios = 0.85)
head(h2o_frame_split)
View(dados)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
realizou_compra = factor(rbinom(4000, 1, 0.47), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.42), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
# Criação de Novas Características (Variáveis)
dados <- dados %>%
mutate(
razao_produtos_tempo = produtos_visualizados / tempo_na_plataforma,
interacao_idade_produtos = idade * produtos_visualizados
)
dados_scaled <- dados %>%
select(-usuario_id) %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
str(dados)
summary(dados)
head(dados)
rm(dados_scaled)
# Salvando dataset
write.csv(dados, file = "dados_exemplo3.csv", row.names = FALSE)
# Carregando dataset
dados <- read.csv("dados_exemplo3.csv")
summary(dados)
head(dados)
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
realizou_compra = factor(rbinom(4000, 1, 0.47), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.42), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
##  Criar dados fictícios
dados <- data.frame(
usuario_id = seq(1, 4000),
idade = sample(18:65, 4000, replace = TRUE),
genero = sample(c("Masculino", "Feminino"), 4000, replace = TRUE),
historico_compras = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.4, 0.4, 0.2)),
categoria_preferida = sample(c("Eletrônicos", "Moda", "Esportes", "Casa", "Beleza"), 4000, replace = TRUE),
tempo_na_plataforma = sample(1:24, 4000, replace = TRUE),
produtos_visualizados = rpois(4000, lambda = 20),
nivel_atividade = sample(c("Baixo", "Médio", "Alto"), 4000, replace = TRUE, prob = c(0.3, 0.4, 0.3)),
realizou_compra = factor(rbinom(4000, 1, 0.47), levels = c(0, 1), labels = c("Não", "Sim")),
churn = factor(rbinom(4000, 1, 0.42), levels = c(0, 1), labels = c("Não", "Sim")),
produto_recomendado = sample(c("A", "B", "C", "D", "E"), 4000, replace = TRUE)
)
# Salvando dataset
write.csv(dados, file = "dados_exemplo3.csv", row.names = FALSE)
# Carregando dataset
dados <- read.csv("dados_exemplo3.csv")
str(dados)
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
# Criação de Novas Características (Variáveis)
dados <- dados %>%
mutate(
razao_produtos_tempo = produtos_visualizados / tempo_na_plataforma,
interacao_idade_produtos = idade * produtos_visualizados
)
str(dados)
# Escalonamento de Variáveis Numéricas
dados_scaled <- dados %>%
select(-usuario_id) %>%
mutate(across(where(is.numeric), scale))
# Adicionando novamente a variável usuario_id
dados <- cbind(usuario_id = dados$usuario_id, dados_scaled)
str(dados)
summary(dados)
rm(dados_scaled)
View(dados)
## Carregando dataset
dados <- read.csv("dados_exemplo3.csv")
str(dados)
## Análise Exploratória + Eng de Atributos
# Modificando qualquer variável chr para factor
dados <- dados %>%
mutate_if(is.character, factor)
str(dados)
summary(dados)
head(dados)
# Criação de Novas Características (Variáveis)
dados <- dados %>%
mutate(
razao_produtos_tempo = produtos_visualizados / tempo_na_plataforma,
interacao_idade_produtos = idade * produtos_visualizados
)
head(dados)
str(dados)
summary(dados)
# Escalonamento de Variáveis Numéricas e Remoção da Variável Id
dados <- dados %>%
select(-usuario_id) %>%
mutate(across(where(is.numeric), scale))
str(dados)
summary(dados)
head(dados)
# O H2O requer que os dados estejam no formato de dataframe do H2O
h2o_frame <- as.h2o(dados)
## Desliga o H2O
h2o.shutdown()
## Inicialização do h2o
h2o.init()
# O H2O requer que os dados estejam no formato de dataframe do H2O
h2o_frame <- as.h2o(dados)
summary(dados)
str(dados)
## Desliga o H2O
h2o.shutdown()
